<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Math Quiz Game</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background: linear-gradient(to bottom right, #74ebd5, #9face6);
      color: #333;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      overflow-x: hidden;
    }
    .container {
      background: white;
      border-radius: 20px;
      padding: 2rem;
      max-width: 600px;
      width: 90%;
      box-shadow: 0 10px 25px rgba(0,0,0,0.2);
      animation: fadeIn 1s ease-in-out;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    h1 {
      text-align: center;
    }
    .question {
      font-size: 1.5rem;
      margin: 1rem 0;
    }
    input[type="text"] {
      width: 100%;
      padding: 0.75rem;
      font-size: 1rem;
      border: 2px solid #ccc;
      border-radius: 10px;
    }
    button {
      background: #6a11cb;
      background: linear-gradient(to right, #2575fc, #6a11cb);
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      margin-top: 1rem;
      font-size: 1rem;
      border-radius: 10px;
      cursor: pointer;
      width: 100%;
    }
    button:hover {
      opacity: 0.9;
    }
    .status {
      margin: 1rem 0;
      font-weight: bold;
    }
    .score-board, .final-stats {
      margin-top: 1rem;
      font-size: 1rem;
      line-height: 1.6;
    }
    .correct {
      color: green;
    }
    .incorrect {
      color: red;
    }
    .feedback {
      margin-top: 1rem;
      font-size: 1.25rem;
    }
    .hidden { display: none; }
    .mode-btns button {
      width: auto;
      margin: 0.25rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Math Quiz Game</h1>
    <div class="mode-btns">
      <button onclick="startGame('easy')">Easy (15s)</button>
      <button onclick="startGame('medium')">Medium (10s)</button>
      <button onclick="startGame('hard')">Hard (5s)</button>
    </div>
    <div id="quiz-area" class="hidden">
      <div class="status">Hearts: <span id="hearts">5</span> | Score: <span id="score">0</span></div>
      <div class="question" id="question"></div>
      <input type="text" id="answer" placeholder="Enter answer..." onkeydown="if(event.key==='Enter'){submitAnswer()}" />
      <button onclick="submitAnswer()">Submit</button>
      <div class="feedback" id="feedback"></div>
      <div class="status">Timer: <span id="timer"></span>s</div>
    </div>
    <div id="result-area" class="hidden">
      <h2>Game Over!</h2>
      <div class="final-stats">
        Score: <span id="final-score"></span><br>
        High Score: <span id="high-score"></span><br>
        Correct Answers: <span id="correct-count"></span><br>
        Incorrect Answers: <span id="incorrect-count"></span><br><br>
        <strong>Correct Questions:</strong><br>
        <div id="correct-list"></div><br>
        <strong>Incorrect Questions:</strong><br>
        <div id="incorrect-list"></div>
      </div>
      <button onclick="location.reload()">Play Again</button>
    </div>
  </div>

  <script>
    const quizArea = document.getElementById('quiz-area');
    const resultArea = document.getElementById('result-area');
    const questionEl = document.getElementById('question');
    const answerEl = document.getElementById('answer');
    const timerEl = document.getElementById('timer');
    const feedbackEl = document.getElementById('feedback');

    const correctListEl = document.getElementById('correct-list');
    const incorrectListEl = document.getElementById('incorrect-list');

    let score = 0;
    let highScore = localStorage.getItem('highScore') || 0;
    let hearts = 5;
    let timeLeft;
    let timer;
    let modeTime = 15;
    let questionCount = 0;
    let maxQuestions = 100;
    let correctAnswers = 0;
    let incorrectAnswers = 0;
    let correctQ = [];
    let incorrectQ = [];
    let currentAnswer;

    const tables = Array.from({ length: 13 }, (_, i) => i + 1).flatMap(i =>
      Array.from({ length: 10 }, (_, j) => ({ q: `${i} x ${j+1}`, a: (i*(j+1)).toString() }))
    );
    const squares = Array.from({ length: 50 }, (_, i) => ({ q: `${i+1}²`, a: ((i+1)**2).toString() }));
    const cubes = Array.from({ length: 30 }, (_, i) => ({ q: `${i+1}³`, a: ((i+1)**3).toString() }));

    const questions = [...tables, ...squares, ...cubes];

    function startGame(mode) {
      if (mode === 'medium') modeTime = 10;
      else if (mode === 'hard') modeTime = 5;
      else modeTime = 15;

      document.querySelector('.mode-btns').classList.add('hidden');
      quizArea.classList.remove('hidden');
      nextQuestion();
    }

    function nextQuestion() {
      if (questionCount >= maxQuestions || hearts <= 0) return endGame();
      const q = questions[Math.floor(Math.random() * questions.length)];
      questionEl.textContent = q.q;
      currentAnswer = q.a;
      answerEl.value = '';
      feedbackEl.textContent = '';
      timeLeft = modeTime;
      timerEl.textContent = timeLeft;
      clearInterval(timer);
      timer = setInterval(() => {
        timeLeft--;
        timerEl.textContent = timeLeft;
        if (timeLeft === 0) {
          clearInterval(timer);
          handleIncorrect();
        }
      }, 1000);
    }

    function submitAnswer() {
      clearInterval(timer);
      const userAns = answerEl.value.trim();
      if (userAns === currentAnswer) {
        score++;
        correctAnswers++;
        correctQ.push(questionEl.textContent + ' = ' + currentAnswer);
        feedbackEl.innerHTML = '<span class="correct">Correct!</span>';
      } else {
        handleIncorrect(userAns);
        return;
      }
      document.getElementById('score').textContent = score;
      setTimeout(() => {
        questionCount++;
        nextQuestion();
      }, 1000);
    }

    function handleIncorrect(userAns = '') {
      hearts--;
      incorrectAnswers++;
      incorrectQ.push(`${questionEl.textContent} = ${currentAnswer} (You: ${userAns || 'No answer'})`);
      document.getElementById('hearts').textContent = hearts;
      feedbackEl.innerHTML = `<span class="incorrect">Incorrect! Correct: ${currentAnswer}</span>`;
      setTimeout(() => {
        questionCount++;
        nextQuestion();
      }, 1000);
    }

    function endGame() {
      quizArea.classList.add('hidden');
      resultArea.classList.remove('hidden');
      document.getElementById('final-score').textContent = score;
      if (score > highScore) {
        localStorage.setItem('highScore', score);
        highScore = score;
      }
      document.getElementById('high-score').textContent = highScore;
      document.getElementById('correct-count').textContent = correctAnswers;
      document.getElementById('incorrect-count').textContent = incorrectAnswers;
      correctListEl.innerHTML = correctQ.map(q => `<div>${q}</div>`).join('');
      incorrectListEl.innerHTML = incorrectQ.map(q => `<div>${q}</div>`).join('');
    }
  </script>
</body>
</html>
